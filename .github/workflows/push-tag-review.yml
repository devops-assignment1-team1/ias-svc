name: Push Tag Review

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  frontend-review:
    runs-on: ubuntu-latest
    name: Frontend Review
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js v16.13.1
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.1
      - name: Install Node Packages
        run: |
          cd frontend
          npm install
      - name: Run Jest
        run: |
          cd frontend
          npm test
      - name: Upload Test Report Artifect
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend_test_report
          path: frontend/junit.xml
      - name: send telegram message if fail
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          to: "-827526484"
          token: "5669366185:AAFQ0KZ61oJxnh73V0Ove0-RiWY4LKbvx5I"
          message: |
            Frontend unit test failed.

            PR Owner: ${{ github.actor }}
            PR message: ${{ github.event.pull_request.title }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/pull/${{github.event.number}}
  backend-review:
    runs-on: ubuntu-latest
    name: Backend Review
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Network
        run: docker network create -d bridge ias_net
      - name: Build the Docker image
        run: |
          cd database
          docker-compose up --build -d
      - name: Wait for Database
        run: |
          cd database
          while ! docker-compose logs | grep "ready for connections"; do
            echo "Waiting for initdb to complete..."
            sleep 5
          done
          sleep 5
      - name: Use Node.js v16.13.1
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.1
      - name: Install Node Packages
        run: |
          cd backend
          npm install
      - name: Run Jest
        run: |
          cd backend
          npm test
      - name: Upload Artifect
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend_test_report
          path: backend/junit.xml
      - name: send telegram message if fail
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          to: "-827526484"
          token: "5669366185:AAFQ0KZ61oJxnh73V0Ove0-RiWY4LKbvx5I"
          message: |
            SQL unit test failed.

            PR Owner: ${{ github.actor }}
            PR message: ${{ github.event.pull_request.title }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/pull/${{github.event.number}}
  sql-review:
    runs-on: ubuntu-latest
    name: SQL Review
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Network
        run: docker network create -d bridge ias_net
      - name: Build the Docker image
        run: |
          cd database
          docker-compose up --build -d
      - name: Unit Test (Student)
        run: |
          cd database
          while ! docker-compose logs | grep "ready for connections"; do
            echo "Waiting for initdb to complete..."
            sleep 5
          done
          sleep 5
          docker exec database_db_1 mysql -uroot -ppassword -Ddb -e "SELECT * FROM student;" | grep -q "S12345670A"
          if [ $? -ne 0 ]; then
            exit 1
          fi
      - name: Unit Test (Company)
        run: |
          docker exec database_db_1 mysql -uroot -ppassword -Ddb -e "SELECT * FROM company;" | grep -q "Company A"
          if [ $? -ne 0 ]; then
            exit 1
          fi
      - name: Unit Test (System Settings)
        run: |
          docker exec database_db_1 mysql -uroot -ppassword -Ddb -e "SELECT * FROM system_settings;" | grep -q "EMAIL_DIRECTORY"
          if [ $? -ne 0 ]; then
            exit 1
          fi
      - name: send telegram message if fail
        uses: appleboy/telegram-action@master
        if: failure()
        with:
          to: "-827526484"
          token: "5669366185:AAFQ0KZ61oJxnh73V0Ove0-RiWY4LKbvx5I"
          message: |
            SQL unit test failed.

            PR Owner: ${{ github.actor }}
            PR message: ${{ github.event.pull_request.title }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/pull/${{github.event.number}}
  integration-test:
    runs-on: ubuntu-latest
    name: Integration Test
    needs: [frontend-review, backend-review, sql-review]
    steps:
      - uses: actions/checkout@v3
  create-release:
    name: Create Release
    needs: [integration-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Frontend Unit Test Result
        uses: actions/download-artifact@v3
        with:
          name: frontend_test_report
          path: reports/front_end_report
      - name: Download Backend Unit Test Result
        uses: actions/download-artifact@v3
        with:
          name: backend_test_report
          path: reports/backend_test_report
      - run: ls
      - name: Create Zip
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "release.zip"
          exclusions: "/*src/*__tests__/* /*.github/* /*.git/*"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.zip"
  send-email:
    runs-on: ubuntu-latest
    name: Send Message
    needs: [create-release]
    steps:
      - name: send telegram message on PR
        uses: appleboy/telegram-action@master
        with:
          to: "-827526484"
          token: "5669366185:AAFQ0KZ61oJxnh73V0Ove0-RiWY4LKbvx5I"
          message: |
            Release ${{ github.ref_name }} made.

            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
